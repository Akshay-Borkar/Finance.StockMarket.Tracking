// <auto-generated />
using System;
using Finance.StockMarket.Domain.DatabaseContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Finance.StockMarket.Persistence.Migrations
{
    [DbContext(typeof(FinanceStockMarketDatabaseContext))]
    [Migration("20250307145502_PokerGame")]
    partial class PokerGame
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Finance.StockMarket.Domain.Investment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("BuyingPrice")
                        .HasColumnType("float");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvestedAmount")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("InvestmentDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("StockDetailsId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StockDetailsId");

                    b.ToTable("Investments");
                });

            modelBuilder.Entity("Finance.StockMarket.Domain.PokerGame.Bet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("BetType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlayerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Bets");
                });

            modelBuilder.Entity("Finance.StockMarket.Domain.PokerGame.Card", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("PlayerId")
                        .HasColumnType("int");

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("Suit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PlayerId");

                    b.HasIndex("RoomId");

                    b.ToTable("Cards");
                });

            modelBuilder.Entity("Finance.StockMarket.Domain.PokerGame.Player", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("RoomId")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("WalletBalance")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("RoomId");

                    b.ToTable("Players");
                });

            modelBuilder.Entity("Finance.StockMarket.Domain.PokerGame.Room", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<decimal>("Pot")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("RoomCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Rooms");
                });

            modelBuilder.Entity("Finance.StockMarket.Domain.Stock", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CurrentPrice")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<string>("MarketCap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("StockPE")
                        .HasColumnType("float");

                    b.Property<Guid>("StockSectorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ticker")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("StockSectorId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("Finance.StockMarket.Domain.StockSector", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateModified")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double?>("SectorPE")
                        .HasColumnType("float");

                    b.Property<string>("StockSectorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("StockSectors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("9b1c2b4d-0d51-421b-ab51-8a2cd9e5f3f7"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DateCreated = new DateTime(2024, 2, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            DateModified = new DateTime(2024, 2, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StockSectorName = "IT"
                        },
                        new
                        {
                            Id = new Guid("9b1c2b4d-0d51-421b-ab51-8a2cd9e5f3f8"),
                            CreatedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            DateCreated = new DateTime(2024, 2, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            DateModified = new DateTime(2024, 2, 10, 12, 0, 0, 0, DateTimeKind.Utc),
                            ModifiedBy = new Guid("00000000-0000-0000-0000-000000000000"),
                            StockSectorName = "Health"
                        });
                });

            modelBuilder.Entity("Finance.StockMarket.Domain.Investment", b =>
                {
                    b.HasOne("Finance.StockMarket.Domain.Stock", "StockDetails")
                        .WithMany()
                        .HasForeignKey("StockDetailsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StockDetails");
                });

            modelBuilder.Entity("Finance.StockMarket.Domain.PokerGame.Card", b =>
                {
                    b.HasOne("Finance.StockMarket.Domain.PokerGame.Player", null)
                        .WithMany("Hand")
                        .HasForeignKey("PlayerId");

                    b.HasOne("Finance.StockMarket.Domain.PokerGame.Room", null)
                        .WithMany("CommunityCards")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("Finance.StockMarket.Domain.PokerGame.Player", b =>
                {
                    b.HasOne("Finance.StockMarket.Domain.PokerGame.Room", null)
                        .WithMany("Players")
                        .HasForeignKey("RoomId");
                });

            modelBuilder.Entity("Finance.StockMarket.Domain.Stock", b =>
                {
                    b.HasOne("Finance.StockMarket.Domain.StockSector", "StockSector")
                        .WithMany()
                        .HasForeignKey("StockSectorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("StockSector");
                });

            modelBuilder.Entity("Finance.StockMarket.Domain.PokerGame.Player", b =>
                {
                    b.Navigation("Hand");
                });

            modelBuilder.Entity("Finance.StockMarket.Domain.PokerGame.Room", b =>
                {
                    b.Navigation("CommunityCards");

                    b.Navigation("Players");
                });
#pragma warning restore 612, 618
        }
    }
}
